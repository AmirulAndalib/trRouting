// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: tripsCollection.capnp

#include "tripsCollection.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<38> b_f02a08a186b9e1c6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198, 225, 185, 134, 161,   8,  42, 240,
     22,   0,   0,   0,   1,   0,   0,   0,
    111, 178, 139, 222,  90, 193, 232, 154,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114, 105, 112, 115,  67, 111, 108,
    108, 101,  99, 116, 105, 111, 110,  46,
     99,  97, 112, 110, 112,  58,  84, 114,
    105, 112, 115,  67, 111, 108, 108, 101,
     99, 116, 105, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    116, 114, 105, 112, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129, 169, 227,  95, 234,   9, 124, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f02a08a186b9e1c6 = b_f02a08a186b9e1c6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f02a08a186b9e1c6[] = {
  &s_e67c09ea5fe3a981,
};
static const uint16_t m_f02a08a186b9e1c6[] = {0};
static const uint16_t i_f02a08a186b9e1c6[] = {0};
const ::capnp::_::RawSchema s_f02a08a186b9e1c6 = {
  0xf02a08a186b9e1c6, b_f02a08a186b9e1c6.words, 38, d_f02a08a186b9e1c6, m_f02a08a186b9e1c6,
  1, 1, i_f02a08a186b9e1c6, nullptr, nullptr, { &s_f02a08a186b9e1c6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<112> b_e67c09ea5fe3a981 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129, 169, 227,  95, 234,   9, 124, 230,
     22,   0,   0,   0,   1,   0,   6,   0,
    111, 178, 139, 222,  90, 193, 232, 154,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114, 105, 112, 115,  67, 111, 108,
    108, 101,  99, 116, 105, 111, 110,  46,
     99,  97, 112, 110, 112,  58,  84, 114,
    105, 112,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 117, 116, 101,  73, 100,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 117, 116, 101,  80,  97, 116,
    104,  73, 100,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 117, 116, 101,  84, 121, 112,
    101,  73, 100,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 103, 101, 110,  99, 121,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 105,  99, 101,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e67c09ea5fe3a981 = b_e67c09ea5fe3a981.words;
#if !CAPNP_LITE
static const uint16_t m_e67c09ea5fe3a981[] = {4, 0, 1, 2, 3, 5};
static const uint16_t i_e67c09ea5fe3a981[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_e67c09ea5fe3a981 = {
  0xe67c09ea5fe3a981, b_e67c09ea5fe3a981.words, 112, nullptr, m_e67c09ea5fe3a981,
  0, 6, i_e67c09ea5fe3a981, nullptr, nullptr, { &s_e67c09ea5fe3a981, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace tripsCollection {

// TripsCollection
constexpr uint16_t TripsCollection::_capnpPrivate::dataWordSize;
constexpr uint16_t TripsCollection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TripsCollection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TripsCollection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Trip
constexpr uint16_t Trip::_capnpPrivate::dataWordSize;
constexpr uint16_t Trip::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Trip::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Trip::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace


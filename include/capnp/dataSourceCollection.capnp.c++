// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: dataSourceCollection.capnp

#include "dataSourceCollection.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<40> b_c67c47e56cc5fbb5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181, 251, 197, 108, 229,  71, 124, 198,
     27,   0,   0,   0,   1,   0,   0,   0,
     56, 103,   8, 186,  26,  49, 209, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  83, 111, 117, 114,
     99, 101,  67, 111, 108, 108, 101,  99,
    116, 105, 111, 110,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  83,
    111, 117, 114,  99, 101,  67, 111, 108,
    108, 101,  99, 116, 105, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,  83, 111, 117, 114,
     99, 101, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    192, 138,  90, 148,  15, 202,   0, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c67c47e56cc5fbb5 = b_c67c47e56cc5fbb5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c67c47e56cc5fbb5[] = {
  &s_ee00ca0f945a8ac0,
};
static const uint16_t m_c67c47e56cc5fbb5[] = {0};
static const uint16_t i_c67c47e56cc5fbb5[] = {0};
const ::capnp::_::RawSchema s_c67c47e56cc5fbb5 = {
  0xc67c47e56cc5fbb5, b_c67c47e56cc5fbb5.words, 40, d_c67c47e56cc5fbb5, m_c67c47e56cc5fbb5,
  1, 1, i_c67c47e56cc5fbb5, nullptr, nullptr, { &s_c67c47e56cc5fbb5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace dataSourceCollection {

// DataSourceCollection
constexpr uint16_t DataSourceCollection::_capnpPrivate::dataWordSize;
constexpr uint16_t DataSourceCollection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DataSourceCollection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DataSourceCollection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace


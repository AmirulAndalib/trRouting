// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: blocksCollection.capnp

#include "blocksCollection.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<38> b_abe7850460ba4b0c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12,  75, 186,  96,   4, 133, 231, 171,
     23,   0,   0,   0,   1,   0,   0,   0,
    223, 223, 142, 147, 169, 201, 216, 178,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107, 115,  67, 111,
    108, 108, 101,  99, 116, 105, 111, 110,
     46,  99,  97, 112, 110, 112,  58,  66,
    108, 111,  99, 107, 115,  67, 111, 108,
    108, 101,  99, 116, 105, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     57,  73,  48,  14,   6, 202,  80, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_abe7850460ba4b0c = b_abe7850460ba4b0c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_abe7850460ba4b0c[] = {
  &s_d650ca060e304939,
};
static const uint16_t m_abe7850460ba4b0c[] = {0};
static const uint16_t i_abe7850460ba4b0c[] = {0};
const ::capnp::_::RawSchema s_abe7850460ba4b0c = {
  0xabe7850460ba4b0c, b_abe7850460ba4b0c.words, 38, d_abe7850460ba4b0c, m_abe7850460ba4b0c,
  1, 1, i_abe7850460ba4b0c, nullptr, nullptr, { &s_abe7850460ba4b0c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_d650ca060e304939 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     57,  73,  48,  14,   6, 202,  80, 214,
     23,   0,   0,   0,   1,   0,   0,   0,
    223, 223, 142, 147, 169, 201, 216, 178,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107, 115,  67, 111,
    108, 108, 101,  99, 116, 105, 111, 110,
     46,  99,  97, 112, 110, 112,  58,  66,
    108, 111,  99, 107,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    117, 117, 105, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d650ca060e304939 = b_d650ca060e304939.words;
#if !CAPNP_LITE
static const uint16_t m_d650ca060e304939[] = {1, 0};
static const uint16_t i_d650ca060e304939[] = {0, 1};
const ::capnp::_::RawSchema s_d650ca060e304939 = {
  0xd650ca060e304939, b_d650ca060e304939.words, 48, nullptr, m_d650ca060e304939,
  0, 2, i_d650ca060e304939, nullptr, nullptr, { &s_d650ca060e304939, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace blocksCollection {

// BlocksCollection
constexpr uint16_t BlocksCollection::_capnpPrivate::dataWordSize;
constexpr uint16_t BlocksCollection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlocksCollection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlocksCollection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Block
constexpr uint16_t Block::_capnpPrivate::dataWordSize;
constexpr uint16_t Block::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Block::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Block::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace


// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: dataSourcesCollection.capnp

#include "dataSourcesCollection.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<41> b_f348db3c83a8ee8c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    140, 238, 168, 131,  60, 219,  72, 243,
     28,   0,   0,   0,   1,   0,   0,   0,
     56, 103,   8, 186,  26,  49, 209, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  83, 111, 117, 114,
     99, 101, 115,  67, 111, 108, 108, 101,
     99, 116, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  68,  97, 116,  97,
     83, 111, 117, 114,  99, 101, 115,  67,
    111, 108, 108, 101,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,  83, 111, 117, 114,
     99, 101, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    192, 138,  90, 148,  15, 202,   0, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f348db3c83a8ee8c = b_f348db3c83a8ee8c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f348db3c83a8ee8c[] = {
  &s_ee00ca0f945a8ac0,
};
static const uint16_t m_f348db3c83a8ee8c[] = {0};
static const uint16_t i_f348db3c83a8ee8c[] = {0};
const ::capnp::_::RawSchema s_f348db3c83a8ee8c = {
  0xf348db3c83a8ee8c, b_f348db3c83a8ee8c.words, 41, d_f348db3c83a8ee8c, m_f348db3c83a8ee8c,
  1, 1, i_f348db3c83a8ee8c, nullptr, nullptr, { &s_f348db3c83a8ee8c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace dataSourcesCollection {

// DataSourcesCollection
constexpr uint16_t DataSourcesCollection::_capnpPrivate::dataWordSize;
constexpr uint16_t DataSourcesCollection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DataSourcesCollection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DataSourcesCollection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace


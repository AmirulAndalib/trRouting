// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: stationsCollection.capnp

#include "stationsCollection.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<40> b_c4c4e77fd73f692f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47, 105,  63, 215, 127, 231, 196, 196,
     25,   0,   0,   0,   1,   0,   0,   0,
     95, 120,  42,  15, 187,  56,   1, 133,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 105, 111, 110, 115,
     67, 111, 108, 108, 101,  99, 116, 105,
    111, 110,  46,  99,  97, 112, 110, 112,
     58,  83, 116,  97, 116, 105, 111, 110,
    115,  67, 111, 108, 108, 101,  99, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 105, 111, 110, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    142,  52, 252, 227,  98, 154,  43, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4c4e77fd73f692f = b_c4c4e77fd73f692f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c4c4e77fd73f692f[] = {
  &s_cf2b9a62e3fc348e,
};
static const uint16_t m_c4c4e77fd73f692f[] = {0};
static const uint16_t i_c4c4e77fd73f692f[] = {0};
const ::capnp::_::RawSchema s_c4c4e77fd73f692f = {
  0xc4c4e77fd73f692f, b_c4c4e77fd73f692f.words, 40, d_c4c4e77fd73f692f, m_c4c4e77fd73f692f,
  1, 1, i_c4c4e77fd73f692f, nullptr, nullptr, { &s_c4c4e77fd73f692f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_cf2b9a62e3fc348e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142,  52, 252, 227,  98, 154,  43, 207,
     25,   0,   0,   0,   1,   0,   0,   0,
     95, 120,  42,  15, 187,  56,   1, 133,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 105, 111, 110, 115,
     67, 111, 108, 108, 101,  99, 116, 105,
    111, 110,  46,  99,  97, 112, 110, 112,
     58,  83, 116,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    117, 117, 105, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 100, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf2b9a62e3fc348e = b_cf2b9a62e3fc348e.words;
#if !CAPNP_LITE
static const uint16_t m_cf2b9a62e3fc348e[] = {1, 2, 0};
static const uint16_t i_cf2b9a62e3fc348e[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cf2b9a62e3fc348e = {
  0xcf2b9a62e3fc348e, b_cf2b9a62e3fc348e.words, 64, nullptr, m_cf2b9a62e3fc348e,
  0, 3, i_cf2b9a62e3fc348e, nullptr, nullptr, { &s_cf2b9a62e3fc348e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace stationsCollection {

// StationsCollection
constexpr uint16_t StationsCollection::_capnpPrivate::dataWordSize;
constexpr uint16_t StationsCollection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind StationsCollection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StationsCollection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Station
constexpr uint16_t Station::_capnpPrivate::dataWordSize;
constexpr uint16_t Station::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Station::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Station::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace


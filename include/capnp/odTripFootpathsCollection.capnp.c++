// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: odTripFootpathsCollection.capnp

#include "odTripFootpathsCollection.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<63> b_db9d7702f2aac194 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148, 193, 170, 242,   2, 119, 157, 219,
     32,   0,   0,   0,   1,   0,   0,   0,
    153, 242, 133,  67, 218,  80,  68, 150,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104, 115,  67,
    111, 108, 108, 101,  99, 116, 105, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     79, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104, 115,  67,
    111, 108, 108, 101,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
    111, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29, 187,  58, 252, 127,  16, 149, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104,  82,  97,
    110, 103, 101, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    117,  45, 174, 106,  18, 127, 226, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db9d7702f2aac194 = b_db9d7702f2aac194.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_db9d7702f2aac194[] = {
  &s_c0e27f126aae2d75,
  &s_d095107ffc3abb1d,
};
static const uint16_t m_db9d7702f2aac194[] = {1, 0};
static const uint16_t i_db9d7702f2aac194[] = {0, 1};
const ::capnp::_::RawSchema s_db9d7702f2aac194 = {
  0xdb9d7702f2aac194, b_db9d7702f2aac194.words, 63, d_db9d7702f2aac194, m_db9d7702f2aac194,
  2, 2, i_db9d7702f2aac194, nullptr, nullptr, { &s_db9d7702f2aac194, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_d095107ffc3abb1d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29, 187,  58, 252, 127,  16, 149, 208,
     32,   0,   0,   0,   1,   0,   1,   0,
    153, 242, 133,  67, 218,  80,  68, 150,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104, 115,  67,
    111, 108, 108, 101,  99, 116, 105, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     79, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 111, 112,  73, 100, 120,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 118, 101, 108,  84, 105,
    109, 101,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d095107ffc3abb1d = b_d095107ffc3abb1d.words;
#if !CAPNP_LITE
static const uint16_t m_d095107ffc3abb1d[] = {0, 1};
static const uint16_t i_d095107ffc3abb1d[] = {0, 1};
const ::capnp::_::RawSchema s_d095107ffc3abb1d = {
  0xd095107ffc3abb1d, b_d095107ffc3abb1d.words, 51, nullptr, m_d095107ffc3abb1d,
  0, 2, i_d095107ffc3abb1d, nullptr, nullptr, { &s_d095107ffc3abb1d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_c0e27f126aae2d75 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    117,  45, 174, 106,  18, 127, 226, 192,
     32,   0,   0,   0,   1,   0,   1,   0,
    153, 242, 133,  67, 218,  80,  68, 150,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104, 115,  67,
    111, 108, 108, 101,  99, 116, 105, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     79, 100,  84, 114, 105, 112,  70, 111,
    111, 116, 112,  97, 116, 104,  82,  97,
    110, 103, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
    102, 111, 111, 116, 112,  97, 116, 104,
    115,  83, 116,  97, 114, 116,  73, 100,
    120,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 111, 116, 112,  97, 116, 104,
    115,  69, 110, 100,  73, 100, 120,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0e27f126aae2d75 = b_c0e27f126aae2d75.words;
#if !CAPNP_LITE
static const uint16_t m_c0e27f126aae2d75[] = {1, 0};
static const uint16_t i_c0e27f126aae2d75[] = {0, 1};
const ::capnp::_::RawSchema s_c0e27f126aae2d75 = {
  0xc0e27f126aae2d75, b_c0e27f126aae2d75.words, 54, nullptr, m_c0e27f126aae2d75,
  0, 2, i_c0e27f126aae2d75, nullptr, nullptr, { &s_c0e27f126aae2d75, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace odTripFootpathsCollection {

// OdTripFootpathsCollection
constexpr uint16_t OdTripFootpathsCollection::_capnpPrivate::dataWordSize;
constexpr uint16_t OdTripFootpathsCollection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OdTripFootpathsCollection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OdTripFootpathsCollection::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OdTripFootpath
constexpr uint16_t OdTripFootpath::_capnpPrivate::dataWordSize;
constexpr uint16_t OdTripFootpath::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OdTripFootpath::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OdTripFootpath::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OdTripFootpathRange
constexpr uint16_t OdTripFootpathRange::_capnpPrivate::dataWordSize;
constexpr uint16_t OdTripFootpathRange::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OdTripFootpathRange::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OdTripFootpathRange::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_route.proto

#ifndef PROTOBUF_INCLUDED_proto_5froute_2eproto
#define PROTOBUF_INCLUDED_proto_5froute_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_5froute_2eproto 

namespace protobuf_proto_5froute_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_5froute_2eproto
class ProtoRoute;
class ProtoRouteDefaultTypeInternal;
extern ProtoRouteDefaultTypeInternal _ProtoRoute_default_instance_;
namespace google {
namespace protobuf {
template<> ::ProtoRoute* Arena::CreateMaybeMessage<::ProtoRoute>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class ProtoRoute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoRoute) */ {
 public:
  ProtoRoute();
  virtual ~ProtoRoute();

  ProtoRoute(const ProtoRoute& from);

  inline ProtoRoute& operator=(const ProtoRoute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoRoute(ProtoRoute&& from) noexcept
    : ProtoRoute() {
    *this = ::std::move(from);
  }

  inline ProtoRoute& operator=(ProtoRoute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRoute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoRoute* internal_default_instance() {
    return reinterpret_cast<const ProtoRoute*>(
               &_ProtoRoute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProtoRoute* other);
  friend void swap(ProtoRoute& a, ProtoRoute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoRoute* New() const final {
    return CreateMaybeMessage<ProtoRoute>(NULL);
  }

  ProtoRoute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtoRoute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtoRoute& from);
  void MergeFrom(const ProtoRoute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoRoute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string agency_acronym = 4;
  void clear_agency_acronym();
  static const int kAgencyAcronymFieldNumber = 4;
  const ::std::string& agency_acronym() const;
  void set_agency_acronym(const ::std::string& value);
  #if LANG_CXX11
  void set_agency_acronym(::std::string&& value);
  #endif
  void set_agency_acronym(const char* value);
  void set_agency_acronym(const char* value, size_t size);
  ::std::string* mutable_agency_acronym();
  ::std::string* release_agency_acronym();
  void set_allocated_agency_acronym(::std::string* agency_acronym);

  // string agency_name = 5;
  void clear_agency_name();
  static const int kAgencyNameFieldNumber = 5;
  const ::std::string& agency_name() const;
  void set_agency_name(const ::std::string& value);
  #if LANG_CXX11
  void set_agency_name(::std::string&& value);
  #endif
  void set_agency_name(const char* value);
  void set_agency_name(const char* value, size_t size);
  ::std::string* mutable_agency_name();
  ::std::string* release_agency_name();
  void set_allocated_agency_name(::std::string* agency_name);

  // string shortname = 6;
  void clear_shortname();
  static const int kShortnameFieldNumber = 6;
  const ::std::string& shortname() const;
  void set_shortname(const ::std::string& value);
  #if LANG_CXX11
  void set_shortname(::std::string&& value);
  #endif
  void set_shortname(const char* value);
  void set_shortname(const char* value, size_t size);
  ::std::string* mutable_shortname();
  ::std::string* release_shortname();
  void set_allocated_shortname(::std::string* shortname);

  // string longname = 7;
  void clear_longname();
  static const int kLongnameFieldNumber = 7;
  const ::std::string& longname() const;
  void set_longname(const ::std::string& value);
  #if LANG_CXX11
  void set_longname(::std::string&& value);
  #endif
  void set_longname(const char* value);
  void set_longname(const char* value, size_t size);
  ::std::string* mutable_longname();
  ::std::string* release_longname();
  void set_allocated_longname(::std::string* longname);

  // string route_type_name = 8;
  void clear_route_type_name();
  static const int kRouteTypeNameFieldNumber = 8;
  const ::std::string& route_type_name() const;
  void set_route_type_name(const ::std::string& value);
  #if LANG_CXX11
  void set_route_type_name(::std::string&& value);
  #endif
  void set_route_type_name(const char* value);
  void set_route_type_name(const char* value, size_t size);
  ::std::string* mutable_route_type_name();
  ::std::string* release_route_type_name();
  void set_allocated_route_type_name(::std::string* route_type_name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 agency_id = 2;
  void clear_agency_id();
  static const int kAgencyIdFieldNumber = 2;
  ::google::protobuf::int64 agency_id() const;
  void set_agency_id(::google::protobuf::int64 value);

  // int64 route_type_id = 3;
  void clear_route_type_id();
  static const int kRouteTypeIdFieldNumber = 3;
  ::google::protobuf::int64 route_type_id() const;
  void set_route_type_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ProtoRoute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr agency_acronym_;
  ::google::protobuf::internal::ArenaStringPtr agency_name_;
  ::google::protobuf::internal::ArenaStringPtr shortname_;
  ::google::protobuf::internal::ArenaStringPtr longname_;
  ::google::protobuf::internal::ArenaStringPtr route_type_name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 agency_id_;
  ::google::protobuf::int64 route_type_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5froute_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoRoute

// int64 id = 1;
inline void ProtoRoute::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoRoute::id() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.id)
  return id_;
}
inline void ProtoRoute::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoRoute.id)
}

// int64 agency_id = 2;
inline void ProtoRoute::clear_agency_id() {
  agency_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoRoute::agency_id() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.agency_id)
  return agency_id_;
}
inline void ProtoRoute::set_agency_id(::google::protobuf::int64 value) {
  
  agency_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoRoute.agency_id)
}

// int64 route_type_id = 3;
inline void ProtoRoute::clear_route_type_id() {
  route_type_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoRoute::route_type_id() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.route_type_id)
  return route_type_id_;
}
inline void ProtoRoute::set_route_type_id(::google::protobuf::int64 value) {
  
  route_type_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoRoute.route_type_id)
}

// string agency_acronym = 4;
inline void ProtoRoute::clear_agency_acronym() {
  agency_acronym_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoRoute::agency_acronym() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.agency_acronym)
  return agency_acronym_.GetNoArena();
}
inline void ProtoRoute::set_agency_acronym(const ::std::string& value) {
  
  agency_acronym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoRoute.agency_acronym)
}
#if LANG_CXX11
inline void ProtoRoute::set_agency_acronym(::std::string&& value) {
  
  agency_acronym_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoRoute.agency_acronym)
}
#endif
inline void ProtoRoute::set_agency_acronym(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agency_acronym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoRoute.agency_acronym)
}
inline void ProtoRoute::set_agency_acronym(const char* value, size_t size) {
  
  agency_acronym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoRoute.agency_acronym)
}
inline ::std::string* ProtoRoute::mutable_agency_acronym() {
  
  // @@protoc_insertion_point(field_mutable:ProtoRoute.agency_acronym)
  return agency_acronym_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoRoute::release_agency_acronym() {
  // @@protoc_insertion_point(field_release:ProtoRoute.agency_acronym)
  
  return agency_acronym_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRoute::set_allocated_agency_acronym(::std::string* agency_acronym) {
  if (agency_acronym != NULL) {
    
  } else {
    
  }
  agency_acronym_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agency_acronym);
  // @@protoc_insertion_point(field_set_allocated:ProtoRoute.agency_acronym)
}

// string agency_name = 5;
inline void ProtoRoute::clear_agency_name() {
  agency_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoRoute::agency_name() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.agency_name)
  return agency_name_.GetNoArena();
}
inline void ProtoRoute::set_agency_name(const ::std::string& value) {
  
  agency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoRoute.agency_name)
}
#if LANG_CXX11
inline void ProtoRoute::set_agency_name(::std::string&& value) {
  
  agency_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoRoute.agency_name)
}
#endif
inline void ProtoRoute::set_agency_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoRoute.agency_name)
}
inline void ProtoRoute::set_agency_name(const char* value, size_t size) {
  
  agency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoRoute.agency_name)
}
inline ::std::string* ProtoRoute::mutable_agency_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtoRoute.agency_name)
  return agency_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoRoute::release_agency_name() {
  // @@protoc_insertion_point(field_release:ProtoRoute.agency_name)
  
  return agency_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRoute::set_allocated_agency_name(::std::string* agency_name) {
  if (agency_name != NULL) {
    
  } else {
    
  }
  agency_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agency_name);
  // @@protoc_insertion_point(field_set_allocated:ProtoRoute.agency_name)
}

// string shortname = 6;
inline void ProtoRoute::clear_shortname() {
  shortname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoRoute::shortname() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.shortname)
  return shortname_.GetNoArena();
}
inline void ProtoRoute::set_shortname(const ::std::string& value) {
  
  shortname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoRoute.shortname)
}
#if LANG_CXX11
inline void ProtoRoute::set_shortname(::std::string&& value) {
  
  shortname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoRoute.shortname)
}
#endif
inline void ProtoRoute::set_shortname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  shortname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoRoute.shortname)
}
inline void ProtoRoute::set_shortname(const char* value, size_t size) {
  
  shortname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoRoute.shortname)
}
inline ::std::string* ProtoRoute::mutable_shortname() {
  
  // @@protoc_insertion_point(field_mutable:ProtoRoute.shortname)
  return shortname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoRoute::release_shortname() {
  // @@protoc_insertion_point(field_release:ProtoRoute.shortname)
  
  return shortname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRoute::set_allocated_shortname(::std::string* shortname) {
  if (shortname != NULL) {
    
  } else {
    
  }
  shortname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shortname);
  // @@protoc_insertion_point(field_set_allocated:ProtoRoute.shortname)
}

// string longname = 7;
inline void ProtoRoute::clear_longname() {
  longname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoRoute::longname() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.longname)
  return longname_.GetNoArena();
}
inline void ProtoRoute::set_longname(const ::std::string& value) {
  
  longname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoRoute.longname)
}
#if LANG_CXX11
inline void ProtoRoute::set_longname(::std::string&& value) {
  
  longname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoRoute.longname)
}
#endif
inline void ProtoRoute::set_longname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  longname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoRoute.longname)
}
inline void ProtoRoute::set_longname(const char* value, size_t size) {
  
  longname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoRoute.longname)
}
inline ::std::string* ProtoRoute::mutable_longname() {
  
  // @@protoc_insertion_point(field_mutable:ProtoRoute.longname)
  return longname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoRoute::release_longname() {
  // @@protoc_insertion_point(field_release:ProtoRoute.longname)
  
  return longname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRoute::set_allocated_longname(::std::string* longname) {
  if (longname != NULL) {
    
  } else {
    
  }
  longname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longname);
  // @@protoc_insertion_point(field_set_allocated:ProtoRoute.longname)
}

// string route_type_name = 8;
inline void ProtoRoute::clear_route_type_name() {
  route_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoRoute::route_type_name() const {
  // @@protoc_insertion_point(field_get:ProtoRoute.route_type_name)
  return route_type_name_.GetNoArena();
}
inline void ProtoRoute::set_route_type_name(const ::std::string& value) {
  
  route_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoRoute.route_type_name)
}
#if LANG_CXX11
inline void ProtoRoute::set_route_type_name(::std::string&& value) {
  
  route_type_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoRoute.route_type_name)
}
#endif
inline void ProtoRoute::set_route_type_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  route_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoRoute.route_type_name)
}
inline void ProtoRoute::set_route_type_name(const char* value, size_t size) {
  
  route_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoRoute.route_type_name)
}
inline ::std::string* ProtoRoute::mutable_route_type_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtoRoute.route_type_name)
  return route_type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoRoute::release_route_type_name() {
  // @@protoc_insertion_point(field_release:ProtoRoute.route_type_name)
  
  return route_type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRoute::set_allocated_route_type_name(::std::string* route_type_name) {
  if (route_type_name != NULL) {
    
  } else {
    
  }
  route_type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), route_type_name);
  // @@protoc_insertion_point(field_set_allocated:ProtoRoute.route_type_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_5froute_2eproto

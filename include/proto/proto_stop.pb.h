// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_stop.proto

#ifndef PROTOBUF_INCLUDED_proto_5fstop_2eproto
#define PROTOBUF_INCLUDED_proto_5fstop_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto_point.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_5fstop_2eproto 

namespace protobuf_proto_5fstop_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_5fstop_2eproto
class ProtoStop;
class ProtoStopDefaultTypeInternal;
extern ProtoStopDefaultTypeInternal _ProtoStop_default_instance_;
namespace google {
namespace protobuf {
template<> ::ProtoStop* Arena::CreateMaybeMessage<::ProtoStop>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class ProtoStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoStop) */ {
 public:
  ProtoStop();
  virtual ~ProtoStop();

  ProtoStop(const ProtoStop& from);

  inline ProtoStop& operator=(const ProtoStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoStop(ProtoStop&& from) noexcept
    : ProtoStop() {
    *this = ::std::move(from);
  }

  inline ProtoStop& operator=(ProtoStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoStop* internal_default_instance() {
    return reinterpret_cast<const ProtoStop*>(
               &_ProtoStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProtoStop* other);
  friend void swap(ProtoStop& a, ProtoStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoStop* New() const final {
    return CreateMaybeMessage<ProtoStop>(NULL);
  }

  ProtoStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtoStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtoStop& from);
  void MergeFrom(const ProtoStop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .ProtoPoint point = 4;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 4;
  private:
  const ::ProtoPoint& _internal_point() const;
  public:
  const ::ProtoPoint& point() const;
  ::ProtoPoint* release_point();
  ::ProtoPoint* mutable_point();
  void set_allocated_point(::ProtoPoint* point);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 station_id = 5;
  void clear_station_id();
  static const int kStationIdFieldNumber = 5;
  ::google::protobuf::int64 station_id() const;
  void set_station_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ProtoStop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::ProtoPoint* point_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 station_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fstop_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoStop

// int64 id = 1;
inline void ProtoStop::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoStop::id() const {
  // @@protoc_insertion_point(field_get:ProtoStop.id)
  return id_;
}
inline void ProtoStop::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoStop.id)
}

// string code = 2;
inline void ProtoStop::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoStop::code() const {
  // @@protoc_insertion_point(field_get:ProtoStop.code)
  return code_.GetNoArena();
}
inline void ProtoStop::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoStop.code)
}
#if LANG_CXX11
inline void ProtoStop::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoStop.code)
}
#endif
inline void ProtoStop::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoStop.code)
}
inline void ProtoStop::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoStop.code)
}
inline ::std::string* ProtoStop::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ProtoStop.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoStop::release_code() {
  // @@protoc_insertion_point(field_release:ProtoStop.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoStop::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ProtoStop.code)
}

// string name = 3;
inline void ProtoStop::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoStop::name() const {
  // @@protoc_insertion_point(field_get:ProtoStop.name)
  return name_.GetNoArena();
}
inline void ProtoStop::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoStop.name)
}
#if LANG_CXX11
inline void ProtoStop::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoStop.name)
}
#endif
inline void ProtoStop::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoStop.name)
}
inline void ProtoStop::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoStop.name)
}
inline ::std::string* ProtoStop::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtoStop.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoStop::release_name() {
  // @@protoc_insertion_point(field_release:ProtoStop.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoStop::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtoStop.name)
}

// .ProtoPoint point = 4;
inline bool ProtoStop::has_point() const {
  return this != internal_default_instance() && point_ != NULL;
}
inline const ::ProtoPoint& ProtoStop::_internal_point() const {
  return *point_;
}
inline const ::ProtoPoint& ProtoStop::point() const {
  const ::ProtoPoint* p = point_;
  // @@protoc_insertion_point(field_get:ProtoStop.point)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoPoint*>(
      &::_ProtoPoint_default_instance_);
}
inline ::ProtoPoint* ProtoStop::release_point() {
  // @@protoc_insertion_point(field_release:ProtoStop.point)
  
  ::ProtoPoint* temp = point_;
  point_ = NULL;
  return temp;
}
inline ::ProtoPoint* ProtoStop::mutable_point() {
  
  if (point_ == NULL) {
    auto* p = CreateMaybeMessage<::ProtoPoint>(GetArenaNoVirtual());
    point_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ProtoStop.point)
  return point_;
}
inline void ProtoStop::set_allocated_point(::ProtoPoint* point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(point_);
  }
  if (point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, point, submessage_arena);
    }
    
  } else {
    
  }
  point_ = point;
  // @@protoc_insertion_point(field_set_allocated:ProtoStop.point)
}

// int64 station_id = 5;
inline void ProtoStop::clear_station_id() {
  station_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoStop::station_id() const {
  // @@protoc_insertion_point(field_get:ProtoStop.station_id)
  return station_id_;
}
inline void ProtoStop::set_station_id(::google::protobuf::int64 value) {
  
  station_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoStop.station_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_5fstop_2eproto

# required libraries: yaml-cpp, boost

OS := $(shell uname)
CC = clang++
LOCAL_CPP_FILES := $(wildcard src/*.cpp)
SPECIFIC_CPP_FILES := $(wildcard connection_scan_algorithm/src/*.cpp)
LOCAL_OBJS = $(addprefix obj/,$(notdir $(LOCAL_CPP_FILES:.cpp=.o)))
SPECIFIC_OBJS = $(addprefix connection_scan_algorithm/obj/,$(notdir $(SPECIFIC_CPP_FILES:.cpp=.o)))
LDFLAGS  := -I/usr/local/include -Iinclude -Iconnection_scan_algorithm/include -L/usr/local/lib -lpqxx -lpq -lyaml-cpp -lcurses

ifeq ($(OS),Darwin) 
  # macox
  CXXFLAGS += -std=c++11 -stdlib=libc++
  LINKFLAGS = -lboost_thread-mt -lboost_serialization -lboost_system -lboost_filesystem -lboost_regex -lboost_program_options
else
  # linux or other (only linux ubuntu and debian are supported right now)
  CXXFLAGS += -std=c++11 -stdlib=libstdc++
  LINKFLAGS = -pthread -lboost_thread -lboost_serialization -lboost_system -lboost_filesystem -lboost_regex -lboost_program_options
endif

all: trRoutingCSA

trRoutingCSA: $(LOCAL_OBJS) $(SPECIFIC_OBJS)
  $(CC) $(CXXFLAGS) $(LDFLAGS) $(LINKFLAGS) $^ -O3 -o $@
  
obj/%.o: src/%.cpp
  $(CC) $(CXXFLAGS) $(LDFLAGS) $(LINKFLAGS) -O3 -c -o $@ $<

connection_scan_algorithm/obj/%.o: connection_scan_algorithm/src/%.cpp
  $(CC) $(CXXFLAGS) $(LDFLAGS) $(LINKFLAGS) -O3 -c -o $@ $<

clean:
  -rm connection_scan_algorithm/obj/*.o obj/*.o trRoutingCSA

